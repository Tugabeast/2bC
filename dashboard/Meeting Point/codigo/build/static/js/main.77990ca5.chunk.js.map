{"version":3,"sources":["Components/SideBarData.js","Components/NavBar.js","store/context.js","Components/CardArea.js","Components/ConfigCard.js","Components/SearchList.js","Components/ProgressBar.js","Components/Home.js","Components/Footer.js","Components/List.js","Components/InfoCard.js","App.js","store/useGlobalState.js","index.js"],"names":["SidebarData","title","path","icon","cName","NavBar","Provider","value","color","size","className","onClick","e","preventDefault","map","item","index","key","to","Context","createContext","CardArea","area","props","name","Box","styled","compose","spacing","palette","state","useContext","p","listEvent","viewList","length","class","ConfigCard","globalState","classesButton","makeStyles","root","backgroundColor","borderRadius","label","useStylesButton","classesCard","border","padding","textAlign","height","Radio","marginRight","status","fontWeight","useStylesCard","useState","setValue","clicked","setClicked","FormControl","component","FormLabel","RadioGroup","aria-label","onChange","event","target","FormControlLabel","control","variant","emergencyFlag","SearchList","search","classes","theme","margin","useStylesInput","statusName","input","setInput","filter","i","id","match","toLowerCase","data-title","sort","a","b","localeCompare","worker","style","enmpresa","TextField","placeholder","InputProps","startAdornment","InputAdornment","position","ProgressBar","safe","notSafe","statusSafe","opacity","width","Home","person","setPerson","emergencyState","setEmergencyState","fectchData","axios","get","then","res","data","workers","el","catch","err","console","log","useEffect","isMounted","timer","setInterval","fectchDataTimer","clearInterval","area1","area2","area3","area4","area5","searchTemp","buttonRadio","radio1","radio2","radio3","radio4","radio5","Footer","List","container","maxHeight","maxWidth","useStyles","areaList","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","filteredWorker","hover","role","tabIndex","options","InfoCard","temp","parseInt","open","setOpen","anchorRef","useRef","selectedIndex","setSelectedIndex","handleClick","info","handleToggle","prevOpen","handleClose","current","contains","Grid","direction","alignItems","xs","ButtonGroup","ref","aria-controls","undefined","aria-expanded","aria-haspopup","Popper","anchorEl","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","option","MenuItem","disabled","selected","handleMenuItemClick","App","exact","useGlobalStore","setState","actions","action","type","payload","Index","store","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77990ca5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport * as AiIcons from 'react-icons/ai'\r\nimport * as BsIcons from 'react-icons/bs'\r\n\r\nimport '../styles/NavBar.css'\r\n\r\n\r\nexport const SidebarData = [\r\n    {\r\n        title: 'Home',\r\n        path: '/',\r\n        icon: <AiIcons.AiFillHome />,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Graphics',\r\n        path: '/reports',\r\n        icon: <BsIcons.BsGraphDown />,\r\n        cName: 'nav-text'\r\n    },\r\n    \r\n]","import React, { useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SidebarData } from \"./SideBarData\";\r\nimport \"../styles/NavBar.css\";\r\nimport { IconContext } from \"react-icons\";\r\nimport * as GrIcons from \"react-icons/gr\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <IconContext.Provider value={{ color: \"white\", size: \"30px\" }}>\r\n      <div className=\"navbar\">\r\n        <div className=\"menu-bars\">\r\n          <GrIcons.GrLocation />\r\n        </div>\r\n      </div>\r\n\r\n      <nav className=\"nav-menu\">\r\n        <p className=\"nav-menu-items\" onClick={(e)=> {\r\n          e.preventDefault();\r\n        }}>\r\n          {SidebarData.map((item, index) => {\r\n            return (\r\n              <div key={index} className={item.cName}>\r\n                <Link to={item.path}>\r\n                  <div className=\"menu-icon-text\">\r\n                    <span className=\"menu-icon\">{item.icon}</span>\r\n                    <span className=\"menu-text\">{item.title}</span>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            );\r\n          })}\r\n        </p>\r\n      </nav>\r\n    </IconContext.Provider>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import {createContext} from 'react'\r\n\r\nconst Context = createContext({});\r\n\r\nexport default Context;","import React, { useContext } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Context from \"../store/context\";\r\nimport \"../styles/CardArea.css\";\r\nimport * as GrIcons from \"react-icons/gr\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { compose, spacing, palette } from \"@material-ui/system\";\r\nimport { styled } from \"@material-ui/core/styles\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\n\r\n\r\nfunction CardArea({ area, props, name }) {\r\n  \r\n  const Box = styled(\"div\")(compose(spacing, palette));\r\n\r\n  const { state } = useContext(Context);\r\n\r\n  //Method to View the List of Workers for each Zone\r\n  const viewList = (props) => {\r\n    state.listEvent = props;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        p={4}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          viewList(props);\r\n        }}\r\n        \r\n      >\r\n        <div></div>\r\n        <h1 className=\"card-header\">  {name} </h1>\r\n\r\n        <div className=\"card-number\">\r\n          <p>{area.length}\r\n          <PeopleAltIcon />\r\n          </p>\r\n          \r\n        </div>\r\n\r\n        <Link to=\"/Workers\">\r\n          <Button class=\"btn\">Detalhes</Button>\r\n        </Link>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardArea;\r\n","import React, { useState, useContext } from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Context from \"../store/context\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { textAlign } from \"@material-ui/system\";\r\n\r\nfunction ConfigCard({ name, globalState }) {\r\n\r\n  const { state } = useContext(Context);\r\n\r\n  const useStylesButton = makeStyles({\r\n    root: {\r\n      color: \"white\",\r\n      backgroundColor: \"#3b70b1\",\r\n      borderRadius: \"15px\",\r\n    },\r\n    label: {},\r\n  });\r\n\r\n  const classesButton = useStylesButton();\r\n\r\n\r\n  //CSS styling\r\n  const useStylesCard = makeStyles({\r\n    root: {\r\n      border: \" 3px solid black\",\r\n      borderRadius: \"15px\",\r\n      padding:\"25px\"\r\n    }, // uma regra de estilo\r\n    label: {\r\n      textAlign: \"center\",\r\n      backgroundColor: \"#3b70b1\",\r\n      color: \"white\",\r\n      borderRadius: \"15px\",\r\n      height:'40px',\r\n      padding: '10px'\r\n    },\r\n    Radio: {\r\n      marginRight: \"20px\",\r\n    },\r\n    status: {\r\n      fontWeight: \"1000\",\r\n    } // uma regra de estilo aninhada\r\n  });\r\n\r\n  const classesCard = useStylesCard();\r\n\r\n  const [value, setValue] = useState(globalState);\r\n  const [clicked, setClicked] = useState(globalState);\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setClicked(value);\r\n    if (clicked === 'emergency'){\r\n      state.emergencyFlag = true;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\" className={classesCard.label}>\r\n        {name}\r\n      </FormLabel>\r\n      <RadioGroup\r\n        className={classesCard.root}\r\n        aria-label=\"status\"\r\n        name={name}\r\n        value={value}\r\n        onChange={handleChange}\r\n      >\r\n        <p className={classesCard.status}>\r\n          Status: {clicked == \"standby\" ? \"StandBy\" : \"\"}\r\n          {clicked == \"emergency\" ? \"Emergência\" : \"\"}\r\n          {clicked == \"evacuation\" ? \"Evacuação\" : \"\"}\r\n          {clicked == \"endEmergency\" ? \"Fim Emergência\" : \"\"}\r\n        </p>\r\n        <FormControlLabel\r\n          value=\"standby\"\r\n          control={<Radio className={classesCard.Radio} />}\r\n          label=\"StandBy\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"emergency\"\r\n          control={<Radio className={classesCard.Radio} />}\r\n          label=\"Emergência\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"evacuation\"\r\n          control={<Radio className={classesCard.Radio} />}\r\n          label=\"Evacuação\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"endEmergency\"\r\n          control={<Radio className={classesCard.Radio} />}\r\n          label=\"Fim Emergência\"\r\n        />\r\n      </RadioGroup>\r\n      <Button\r\n        className={classesButton.root}\r\n        variant=\"contained\"\r\n        onClick={handleClick}\r\n      >\r\n        Submeter\r\n      </Button>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default ConfigCard;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Context from \"../store/context\";\r\nimport \"../styles/SearchList.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nfunction SearchList({ search }) {\r\n  const useStylesInput = makeStyles((theme) => ({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\n  const classes = useStylesInput();\r\n\r\n  const { state } = useContext(Context);\r\n\r\n  const name = \"Nome\";\r\n  const id = \"Id\";\r\n  const area = \"Area\";\r\n\r\n  const [statusName, setStatusName] = useState(name);\r\n\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const searchBy = (props) => {\r\n    if (props == 1) {\r\n      setStatusName(id);\r\n    }\r\n    if (props == 2) {\r\n      setStatusName(name);\r\n    }\r\n    if (props == 3) {\r\n      setStatusName(area);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  function searchEngine(props) {\r\n    if (input.length > 0) {\r\n      search = search.filter((i) => {\r\n        if (props === id) {\r\n          return i.id.match(input);\r\n        }\r\n        if (props === name) {\r\n          return i.name.toLowerCase().match(input);\r\n        }\r\n        if (props === area) {\r\n          return i.area.match(input);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      {/* Show List */}\r\n\r\n      <div class=\"table\" onChange={searchEngine(statusName)}>\r\n        <div class=\"row header\">\r\n          <div class=\"cell-index\">Nome</div>\r\n          <div class=\"cell-index\">Empresa</div>\r\n        </div>\r\n        <scroll-container>\r\n          <div class=\"row\">\r\n            <div class=\"cell\" data-title=\"Name\">\r\n              {search\r\n                .sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((worker) => {\r\n                  return (\r\n                    <p\r\n                      className={\r\n                        worker.area == 0 ? \"text-not-safe\" : \"text-safe\"\r\n                      }\r\n                      onClick={() => {\r\n                        state.id = worker.id;\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      {worker.area == 0 ? (\r\n                        <Link to=\"/infoCard\" style={{ color: \"inherit\" }}>\r\n                          {worker.name}\r\n                        </Link>\r\n                      ) : (\r\n                        <p>{worker.name}</p>\r\n                      )}\r\n                    </p>\r\n                  );\r\n                })}\r\n            </div>\r\n\r\n            <div class=\"cell\" data-title=\"company\">\r\n              {search.map((worker) => {\r\n                return (\r\n                  <p\r\n                    className={worker.area == 0 ? \"text-not-safe\" : \"text-safe\"}\r\n                  >\r\n                    {worker.enmpresa}\r\n                  </p>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </scroll-container>\r\n      </div>\r\n\r\n      <TextField\r\n        className={classes.margin}\r\n        placeholder={statusName}\r\n        onChange={handleChange}\r\n        value={input}\r\n        id=\"input-with-icon-textfield\"\r\n        label=\"Pesquisa\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <SearchIcon />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchList;\r\n","import React from \"react\";\r\nimport \"../styles/ProgressBar.css\";\r\n\r\nfunction ProgressBar({ safe, notSafe }) {\r\n  const percentage = (safe * 100) / notSafe;\r\n\r\n  const statusSafe = {\r\n    opacity: \"1\",\r\n    width: `${percentage}%`,\r\n    backgroundColor: \"green\",\r\n  };\r\n\r\n  const statusNotSafe = {\r\n    width: \"100%\",\r\n    backgroundColor: \"red\",\r\n    height: \"45px\",\r\n    border: '5px solid'\r\n  };\r\n\r\n  return (\r\n    <div className=\"progressBar\">\r\n      <p className=\"text-progressbar\">\r\n      \r\n        {safe} / {notSafe}\r\n      </p>\r\n\r\n      <div class=\"progress\" style={statusNotSafe}>\r\n        <div style={statusSafe}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Context from \"../store/context\";\r\nimport \"../styles/Home.css\";\r\nimport \"../styles/Button.css\";\r\n\r\nimport axios from \"axios\";\r\nimport \"../styles/Search.css\";\r\n\r\nimport CardArea from \"./CardArea\";\r\nimport ConfigArea from \"./ConfigCard\";\r\n\r\nimport SearchList from \"./SearchList\";\r\nimport \"../styles/CardArea.css\";\r\n\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nfunction Home() {\r\n  const { state } = useContext(Context);\r\n  //Hook for Fetching\r\n  const [person, setPerson] = useState([]);\r\n  const [emergencyState, setEmergencyState] = useState(10000);\r\n\r\n  //First fetch Data\r\n  const fectchData = async () => {\r\n    axios\r\n      .get(\"http://localhost/db-meeting-point/workers/readWorkersData.php\")\r\n      .then((res) => {\r\n        setPerson(res.data.workers.map((el) => el));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fectchData();\r\n  }, []);\r\n\r\n  // Fecth Data & Timer to fetch the data from Database\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    const timer = setInterval(() => {\r\n      const fectchDataTimer = async () => {\r\n        try {\r\n          const url =\r\n            \"http://localhost/db-meeting-point/workers/readWorkersData.php\";\r\n          const res = await axios.get(url);\r\n\r\n          if (isMounted) {\r\n            setPerson(res.data.workers.map((el) => el));\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      };\r\n      fectchDataTimer();\r\n    }, emergencyState);\r\n    return () => {\r\n      isMounted = false;\r\n      clearInterval(timer);\r\n    };\r\n  }, [emergencyState]);\r\n\r\n  useEffect(() => {\r\n    if (state.emergencyFlag) {\r\n      setEmergencyState(5000);\r\n    }\r\n  });\r\n\r\n  //Variable for filter the data from DB by Area\r\n\r\n  const area1 = person.filter((worker) => worker.area == 1);\r\n  const area2 = person.filter((worker) => worker.area == 2);\r\n  const area3 = person.filter((worker) => worker.area == 3);\r\n  const area4 = person.filter((worker) => worker.area == 4);\r\n  const area5 = person.filter((worker) => worker.area == 5);\r\n\r\n  //Variable to store Data from fectch and to use for Search Engine\r\n  let searchTemp = person;\r\n\r\n  return (\r\n    <div className=\"home-open\">\r\n      {\" \"}\r\n      <div className=\"progresBar\">\r\n        <ProgressBar\r\n          safe={\r\n            area1.length +\r\n            area2.length +\r\n            area3.length +\r\n            area4.length +\r\n            area5.length\r\n          }\r\n          notSafe={person.length}\r\n        />\r\n      </div>\r\n      {/* Show search box*/}\r\n      <div className=\"search\">\r\n        {/* Search and Show List */}\r\n        <SearchList search={searchTemp} />\r\n      </div>\r\n      {/*Testing wirh useContext */}\r\n      <div className=\"config\">\r\n        <h1>Configuração</h1>\r\n        <div className=\"box-config\">\r\n          <ConfigArea name={\"MP_1\"} globalState={state.buttonRadio.radio1} />\r\n          <ConfigArea name={\"MP_2\"} globalState={state.buttonRadio.radio2} />\r\n          <ConfigArea name={\"MP_3\"} globalState={state.buttonRadio.radio3} />\r\n          <ConfigArea name={\"MP_4\"} globalState={state.buttonRadio.radio4} />\r\n          <ConfigArea\r\n            name={\"Brigadistas\"}\r\n            globalState={state.buttonRadio.radio5}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* Show Cards */}\r\n      <div>\r\n        <h1>Zonas Ponta de Encontro</h1>\r\n        <div className=\"cards\">\r\n          {/*Render my Card Component*/}\r\n          <div className=\"card\">\r\n            <CardArea area={area1} props={1} name={\"MP_1\"} />\r\n          </div>\r\n\r\n          <div className=\"card\">\r\n            <CardArea area={area2} props={2} name={\"MP_2\"} />\r\n          </div>\r\n\r\n          <div className=\"card\">\r\n            <CardArea area={area3} props={3} name={\"MP_3\"} />\r\n          </div>\r\n\r\n          <div className=\"card\">\r\n            <CardArea area={area4} props={4} name={\"MP_4\"} />\r\n          </div>\r\n\r\n          <div className=\"card\">\r\n            <CardArea area={area5} props={5} name={\"Brigadistas\"} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nimport \"../styles/Footer.css\";\r\n\r\nfunction Footer() {\r\n  return <footer className=\"footerReports\">Meeting Point 2020</footer>;\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport \"../styles/List.css\";\r\nimport Context from \"../store/context\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as BsIcons from \"react-icons/bs\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction List() {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      borderRadius: 5,\r\n    },\r\n    container: {\r\n      maxHeight: 250,\r\n      maxWidth: 700,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const [person, setPerson] = useState([]);\r\n\r\n  const fectchData = () => {\r\n    axios\r\n      .get(\"http://localhost/db-meeting-point/workers/readWorkersData.php\")\r\n      .then((res) => {\r\n        setPerson(res.data.workers.map((el) => el));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fectchData();\r\n  }, []);\r\n\r\n  const { state } = useContext(Context);\r\n\r\n  const areaList =\r\n    state.listEvent === 0 ? \"Fora da Zona Segura\" : state.listEvent;\r\n\r\n  return (\r\n    <div className=\"list\">\r\n      <Paper className={classes.root}>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <div>\r\n                  <TableCell className=\"column-name\">\r\n                    {areaList === 5 ? \"Brigadistas\" : \"MP_\" + areaList}\r\n                  </TableCell>\r\n                </div>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {person\r\n                .filter((worker) => worker.area == state.listEvent).sort((a, b) => a.name.localeCompare(b.name))\r\n                .map((filteredWorker) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      tabIndex={-1}\r\n                      key={filteredWorker.id}\r\n                    >\r\n                      <div>\r\n                        <TableCell className=\"column-name\">\r\n                          {filteredWorker.name}\r\n                        </TableCell>\r\n                        <TableCell className=\"column-company\">\r\n                          {filteredWorker.enmpresa}\r\n                        </TableCell>\r\n                      </div>\r\n                    </TableRow>\r\n                  );\r\n                }\r\n                )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React, { useEffect, useState, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport Context from \"../store/context\";\r\nimport \"../styles/Home.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\n\r\nconst options = [\"1\", \"2\", \"3\", \"4\", \"5\"];\r\n\r\nfunction InfoCard() {\r\n  const { state } = useContext(Context);\r\n  const temp = parseInt(state.id);\r\n  console.log(typeof temp);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const anchorRef = useRef(null);\r\n  const [selectedIndex, setSelectedIndex] = useState();\r\n\r\n  const handleClick = () => {\r\n    console.info(`You clicked ${options[selectedIndex]}`);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const [person, setPerson] = useState([]);\r\n\r\n  const fectchData = () => {\r\n    axios\r\n      .get(\"http://localhost/db-meeting-point/workers/readWorkersData.php\")\r\n      .then((res) => {\r\n        setPerson(res.data.workers.map((el) => el));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fectchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"list\">\r\n        <table class=\"content-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Info</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              {/* Filter my list of workers by area */}\r\n              {person\r\n                .filter((worker) => worker.id == state.id)\r\n                .map((filteredWorker) => (\r\n                  <div>\r\n                    <p>Id: {filteredWorker.id}</p>\r\n                    <p>Nome: {filteredWorker.name}</p>\r\n                    <p>Empresa: {filteredWorker.enmpresa}</p>\r\n                    <p>\r\n                      Estado:{\" \"}\r\n                      {filteredWorker.area == 0 ? (\r\n                        <strong>Fora da Zona de Segurança</strong>\r\n                      ) : (\r\n                        \"Zona \" + filteredWorker.area\r\n                      )}\r\n                      <Grid container direction=\"column\" alignItems=\"left\">\r\n                        <Grid item xs={12}>\r\n                          <ButtonGroup\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            ref={anchorRef}\r\n                            aria-label=\"split button\"\r\n                          >\r\n                            <Button onClick={handleClick}>\r\n                              {options[selectedIndex]}\r\n                            </Button>\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"small\"\r\n                              aria-controls={\r\n                                open ? \"split-button-menu\" : undefined\r\n                              }\r\n                              aria-expanded={open ? \"true\" : undefined}\r\n                              aria-label=\"select merge strategy\"\r\n                              aria-haspopup=\"menu\"\r\n                              onClick={handleToggle}\r\n                            >\r\n                              <ArrowDropDownIcon />\r\n                            </Button>\r\n                          </ButtonGroup>\r\n                          <Popper\r\n                            open={open}\r\n                            anchorEl={anchorRef.current}\r\n                            role={undefined}\r\n                            transition\r\n                            disablePortal\r\n                          >\r\n                            {({ TransitionProps, placement }) => (\r\n                              <Grow\r\n                                {...TransitionProps}\r\n                                style={{\r\n                                  transformOrigin:\r\n                                    placement === \"bottom\"\r\n                                      ? \"center top\"\r\n                                      : \"center bottom\",\r\n                                }}\r\n                              >\r\n                                <Paper>\r\n                                  <ClickAwayListener onClickAway={handleClose}>\r\n                                    <MenuList id=\"split-button-menu\">\r\n                                      {options.map((option, index) => (\r\n                                        <MenuItem\r\n                                          key={option}\r\n                                          disabled={index === filteredWorker.id}\r\n                                          selected={index === selectedIndex}\r\n                                          onClick={(event) =>\r\n                                            handleMenuItemClick(event, index)\r\n                                          }\r\n                                        >\r\n                                          {option}\r\n                                        </MenuItem>\r\n                                      ))}\r\n                                    </MenuList>\r\n                                  </ClickAwayListener>\r\n                                </Paper>\r\n                              </Grow>\r\n                            )}\r\n                          </Popper>\r\n                        </Grid>\r\n                      </Grid>{\" \"}\r\n                    </p>{\" \"}\r\n                    <Button class=\"btn\">Submeter</Button>\r\n                  </div>\r\n                ))}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InfoCard;\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\nimport NavBar from './Components/NavBar'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Home from './Components/Home';\r\n\r\n\r\nimport Footer from './Components/Footer'\r\nimport List from './Components/List'\r\n\r\nimport InfoCard from './Components/InfoCard';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <Router>\r\n        <NavBar />\r\n         <Switch>\r\n          <Route path='/' exact component={Home} />\r\n          <Route path='/workers' component={List} />\r\n          <Route path='/infoCard' component={InfoCard} />\r\n        </Switch>\r\n      </Router>\r\n      <Footer />\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useGlobalStore = () => {\r\n  const [state, setState] = useState({\r\n    listEvent: 1,\r\n    id: 0,\r\n    buttonRadio: {\r\n      radio1: \"standby\",\r\n      radio2: \"standby\",\r\n      radio3: \"standby\",\r\n      radio4: \"standby\",\r\n      radio5: \"standby\",\r\n    },\r\n    emergencyFlag: false\r\n  });\r\n\r\n  const actions = (action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case \"setState\":\r\n        return setState(payload);\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  return { state, actions };\r\n};\r\n\r\nexport default useGlobalStore;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nimport Context from './store/context';\r\nimport useGlobalStore from './store/useGlobalState';\r\n\r\n\r\nconst Index = () => {\r\n  const store = useGlobalStore();\r\n  return (\r\n    <Context.Provider value={store}>\r\n      <App />\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Index />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n"],"sourceRoot":""}